syntax = "proto3";

package chat;
option go_package = ".";

service ChatService {
  // Existing RPCs
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc ChatStream(stream ChatMessage) returns (stream ChatMessage);
  rpc ActiveUsersStream(ActiveUsersRequest) returns (stream ActiveUsersUpdate);
  
  // New client streaming RPC for status updates
  rpc UpdateStatus(stream StatusUpdate) returns (StatusResponse);
}

// Existing message types
message LoginRequest {
  string username = 1;
}

message LoginResponse {
  string username = 1;
  string message = 2;
}

message ChatMessage {
  string sender = 1;
  string message = 2;
  string timestamp = 3;
}

message ActiveUsersRequest {
  string username = 1;
}

message ActiveUsersUpdate {
  enum UpdateType {
    FULL_LIST = 0;
    JOIN = 1;
    LEAVE = 2;
    STATUS_CHANGE = 3;
  }
  
  UpdateType update_type = 1;
  string username = 2;
  repeated string users = 3;
  map<string, string> user_statuses = 4; // Map username to status
}

// New message types for status updates
message StatusUpdate {
  string username = 1;
  string status = 2;     // "typing" or "online"
  string timestamp = 3;
}

message StatusResponse {
  bool success = 1;
  string message = 2;
}
