syntax = "proto3";

package grpcchat;
option go_package = ".";

service ChatService {
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc ChatStream(stream ChatMessage) returns (stream ChatMessage);
    // Add a new streaming method for active users updates
    rpc ActiveUsersStream(ActiveUsersRequest) returns (stream ActiveUsersUpdate);
}

message LoginRequest {
    string username = 1;
}

message LoginResponse {
    string username = 1;
    string message = 2;
}

message ChatMessage {
    string sender = 1;
    string message = 2;
    string timestamp = 3;
}

// New message types for active users streaming
message ActiveUsersRequest {
    string username = 1;  // The requesting user's name
}

message ActiveUsersUpdate {
    enum UpdateType {
        FULL_LIST = 0;   // Full list of active users
        JOIN = 1;        // User joined
        LEAVE = 2;       // User left
    }
    
    UpdateType update_type = 1;
    repeated string users = 2;     // For FULL_LIST, the complete list of users
    string username = 3;           // For JOIN/LEAVE, the affected user
}
