// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: proto/chat.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActiveUsersUpdate_UpdateType int32

const (
	ActiveUsersUpdate_FULL_LIST     ActiveUsersUpdate_UpdateType = 0
	ActiveUsersUpdate_JOIN          ActiveUsersUpdate_UpdateType = 1
	ActiveUsersUpdate_LEAVE         ActiveUsersUpdate_UpdateType = 2
	ActiveUsersUpdate_STATUS_CHANGE ActiveUsersUpdate_UpdateType = 3
)

// Enum value maps for ActiveUsersUpdate_UpdateType.
var (
	ActiveUsersUpdate_UpdateType_name = map[int32]string{
		0: "FULL_LIST",
		1: "JOIN",
		2: "LEAVE",
		3: "STATUS_CHANGE",
	}
	ActiveUsersUpdate_UpdateType_value = map[string]int32{
		"FULL_LIST":     0,
		"JOIN":          1,
		"LEAVE":         2,
		"STATUS_CHANGE": 3,
	}
)

func (x ActiveUsersUpdate_UpdateType) Enum() *ActiveUsersUpdate_UpdateType {
	p := new(ActiveUsersUpdate_UpdateType)
	*p = x
	return p
}

func (x ActiveUsersUpdate_UpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActiveUsersUpdate_UpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[0].Descriptor()
}

func (ActiveUsersUpdate_UpdateType) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[0]
}

func (x ActiveUsersUpdate_UpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActiveUsersUpdate_UpdateType.Descriptor instead.
func (ActiveUsersUpdate_UpdateType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{4, 0}
}

// Existing message types
type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_proto_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_proto_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        string                 `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     string                 `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_proto_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ChatMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatMessage) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type ActiveUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveUsersRequest) Reset() {
	*x = ActiveUsersRequest{}
	mi := &file_proto_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveUsersRequest) ProtoMessage() {}

func (x *ActiveUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveUsersRequest.ProtoReflect.Descriptor instead.
func (*ActiveUsersRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ActiveUsersRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type ActiveUsersUpdate struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	UpdateType    ActiveUsersUpdate_UpdateType `protobuf:"varint,1,opt,name=update_type,json=updateType,proto3,enum=chat.ActiveUsersUpdate_UpdateType" json:"update_type,omitempty"`
	Username      string                       `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Users         []string                     `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	UserStatuses  map[string]string            `protobuf:"bytes,4,rep,name=user_statuses,json=userStatuses,proto3" json:"user_statuses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Map username to status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveUsersUpdate) Reset() {
	*x = ActiveUsersUpdate{}
	mi := &file_proto_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveUsersUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveUsersUpdate) ProtoMessage() {}

func (x *ActiveUsersUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveUsersUpdate.ProtoReflect.Descriptor instead.
func (*ActiveUsersUpdate) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{4}
}

func (x *ActiveUsersUpdate) GetUpdateType() ActiveUsersUpdate_UpdateType {
	if x != nil {
		return x.UpdateType
	}
	return ActiveUsersUpdate_FULL_LIST
}

func (x *ActiveUsersUpdate) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ActiveUsersUpdate) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ActiveUsersUpdate) GetUserStatuses() map[string]string {
	if x != nil {
		return x.UserStatuses
	}
	return nil
}

// New message types for status updates
type StatusUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // "typing" or "online"
	Timestamp     string                 `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusUpdate) Reset() {
	*x = StatusUpdate{}
	mi := &file_proto_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdate) ProtoMessage() {}

func (x *StatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdate.ProtoReflect.Descriptor instead.
func (*StatusUpdate) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{5}
}

func (x *StatusUpdate) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *StatusUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusUpdate) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_proto_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{6}
}

func (x *StatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_chat_proto protoreflect.FileDescriptor

const file_proto_chat_proto_rawDesc = "" +
	"\n" +
	"\x10proto/chat.proto\x12\x04chat\"*\n" +
	"\fLoginRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\"E\n" +
	"\rLoginResponse\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"]\n" +
	"\vChatMessage\x12\x16\n" +
	"\x06sender\x18\x01 \x01(\tR\x06sender\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\"0\n" +
	"\x12ActiveUsersRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\"\xe0\x02\n" +
	"\x11ActiveUsersUpdate\x12C\n" +
	"\vupdate_type\x18\x01 \x01(\x0e2\".chat.ActiveUsersUpdate.UpdateTypeR\n" +
	"updateType\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05users\x18\x03 \x03(\tR\x05users\x12N\n" +
	"\ruser_statuses\x18\x04 \x03(\v2).chat.ActiveUsersUpdate.UserStatusesEntryR\fuserStatuses\x1a?\n" +
	"\x11UserStatusesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"C\n" +
	"\n" +
	"UpdateType\x12\r\n" +
	"\tFULL_LIST\x10\x00\x12\b\n" +
	"\x04JOIN\x10\x01\x12\t\n" +
	"\x05LEAVE\x10\x02\x12\x11\n" +
	"\rSTATUS_CHANGE\x10\x03\"`\n" +
	"\fStatusUpdate\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\"D\n" +
	"\x0eStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xfd\x01\n" +
	"\vChatService\x120\n" +
	"\x05Login\x12\x12.chat.LoginRequest\x1a\x13.chat.LoginResponse\x126\n" +
	"\n" +
	"ChatStream\x12\x11.chat.ChatMessage\x1a\x11.chat.ChatMessage(\x010\x01\x12H\n" +
	"\x11ActiveUsersStream\x12\x18.chat.ActiveUsersRequest\x1a\x17.chat.ActiveUsersUpdate0\x01\x12:\n" +
	"\fUpdateStatus\x12\x12.chat.StatusUpdate\x1a\x14.chat.StatusResponse(\x01B\x03Z\x01.b\x06proto3"

var (
	file_proto_chat_proto_rawDescOnce sync.Once
	file_proto_chat_proto_rawDescData []byte
)

func file_proto_chat_proto_rawDescGZIP() []byte {
	file_proto_chat_proto_rawDescOnce.Do(func() {
		file_proto_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_chat_proto_rawDesc), len(file_proto_chat_proto_rawDesc)))
	})
	return file_proto_chat_proto_rawDescData
}

var file_proto_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_chat_proto_goTypes = []any{
	(ActiveUsersUpdate_UpdateType)(0), // 0: chat.ActiveUsersUpdate.UpdateType
	(*LoginRequest)(nil),              // 1: chat.LoginRequest
	(*LoginResponse)(nil),             // 2: chat.LoginResponse
	(*ChatMessage)(nil),               // 3: chat.ChatMessage
	(*ActiveUsersRequest)(nil),        // 4: chat.ActiveUsersRequest
	(*ActiveUsersUpdate)(nil),         // 5: chat.ActiveUsersUpdate
	(*StatusUpdate)(nil),              // 6: chat.StatusUpdate
	(*StatusResponse)(nil),            // 7: chat.StatusResponse
	nil,                               // 8: chat.ActiveUsersUpdate.UserStatusesEntry
}
var file_proto_chat_proto_depIdxs = []int32{
	0, // 0: chat.ActiveUsersUpdate.update_type:type_name -> chat.ActiveUsersUpdate.UpdateType
	8, // 1: chat.ActiveUsersUpdate.user_statuses:type_name -> chat.ActiveUsersUpdate.UserStatusesEntry
	1, // 2: chat.ChatService.Login:input_type -> chat.LoginRequest
	3, // 3: chat.ChatService.ChatStream:input_type -> chat.ChatMessage
	4, // 4: chat.ChatService.ActiveUsersStream:input_type -> chat.ActiveUsersRequest
	6, // 5: chat.ChatService.UpdateStatus:input_type -> chat.StatusUpdate
	2, // 6: chat.ChatService.Login:output_type -> chat.LoginResponse
	3, // 7: chat.ChatService.ChatStream:output_type -> chat.ChatMessage
	5, // 8: chat.ChatService.ActiveUsersStream:output_type -> chat.ActiveUsersUpdate
	7, // 9: chat.ChatService.UpdateStatus:output_type -> chat.StatusResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_chat_proto_init() }
func file_proto_chat_proto_init() {
	if File_proto_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_chat_proto_rawDesc), len(file_proto_chat_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_proto_goTypes,
		DependencyIndexes: file_proto_chat_proto_depIdxs,
		EnumInfos:         file_proto_chat_proto_enumTypes,
		MessageInfos:      file_proto_chat_proto_msgTypes,
	}.Build()
	File_proto_chat_proto = out.File
	file_proto_chat_proto_goTypes = nil
	file_proto_chat_proto_depIdxs = nil
}
